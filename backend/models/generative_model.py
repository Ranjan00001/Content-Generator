import google.generativeai as genai
from enum import Enum
from dotenv import load_dotenv
import os
load_dotenv()
# Configure 
# Gemini API
GEMINI_API_KEY = os.getenv('GEMINI_API_KEY')
genai.configure(api_key=GEMINI_API_KEY)

class ModelResponseKeys(Enum):
    """Enum for standard response structure."""
    REVISED_PROMPT = "revised_prompt"
    QUESTIONS = "questions"

# Singleton generative model instance
model = genai.GenerativeModel('gemini-1.5-flash')

def get_model():
    """Returns the generative model instance."""
    return model

def format_model_response(revised_prompt: str, questions: str) -> dict:
    """
    Formats the model's response into the standard structure.
    
    Args:
        revised_prompt (str): The revised prompt generated by the model.
        questions (str): Relevant questions generated by the model.
    
    Returns:
        dict: Structured response containing the revised prompt and questions.
    """
    return {
        ModelResponseKeys.REVISED_PROMPT.value: revised_prompt,
        ModelResponseKeys.QUESTIONS.value: questions,
    }

def extract_revised_prompt_and_questions(response_text):
    """
    Extracts the revised prompt and questions from the model's response.

    Args:
        response_text (str): The response text generated by the model.

    Returns:
        tuple: A tuple containing the revised prompt and the list of questions.
    """
    start_marker_prompt = "Revised Prompt:"
    start_marker_questions = "Questions:"

    # Extract the revised prompt
    prompt_start = response_text.find(start_marker_prompt) + len(start_marker_prompt)
    questions_start = response_text.find(start_marker_questions)
    revised_prompt = response_text[prompt_start:questions_start].strip() if questions_start != -1 else ""

    # Extract the questions
    questions_text = response_text[questions_start + len(start_marker_questions):].strip() if questions_start != -1 else ""
    questions = [q.strip("* ").strip() for q in questions_text.split("\n") if q.strip().startswith("*")]

    return revised_prompt, questions
